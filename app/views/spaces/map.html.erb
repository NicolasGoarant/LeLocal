<% content_for :title, "LeLocal - Recherche d'espaces" %>

<% content_for :head do %>
  <!-- Leaflet CSS -->
  <link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css" 
  integrity="sha512-xodZBNTC5n17Xt2atTPuE1HxjVMSvLVW9ocqUKLsCC5CXdbqCmblAshOMAS6/keqq/sMZMZ19scR4PsZChSR7A==" 
  crossorigin="" />
  
  <!-- Font Awesome pour les icônes -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
  
  <style>
    /* Styles pour la page de recherche avec carte */
    .sub-hero {
      background-color: #f5f5f5;
      padding: 80px 0 50px;
      text-align: center;
      margin-bottom: 40px;
      margin-top: 50px;
    }
    
    .sub-hero h1 {
      font-size: 32px;
      margin-bottom: 15px;
      color: #333;
      font-weight: 600;
    }
    
    .sub-hero p {
      font-size: 18px;
      color: #666;
      max-width: 700px;
      margin: 0 auto;
    }
    
    .search-map-container {
      display: flex;
      gap: 30px;
      margin: 30px 0;
    }
    
    .search-filters {
      flex: 1;
      min-width: 300px;
      max-width: 350px;
      background-color: #fff;
      border-radius: 10px;
      box-shadow: 0 2px 15px rgba(0, 0, 0, 0.08);
      padding: 25px;
      height: fit-content;
    }
    
    .search-filters h2 {
      font-size: 20px;
      margin-bottom: 20px;
      color: #333;
      font-weight: 600;
    }
    
    .filter-section {
      margin-bottom: 25px;
    }
    
    .filter-section h3 {
      font-size: 16px;
      margin-bottom: 15px;
      color: #444;
      font-weight: 500;
    }
    
    .filter-group {
      margin-bottom: 15px;
    }
    
    .filter-group label {
      display: block;
      margin-bottom: 8px;
      color: #555;
      font-size: 14px;
    }
    
    .filter-group input[type="text"],
    .filter-group input[type="date"],
    .filter-group input[type="number"],
    .filter-group select {
      width: 100%;
      padding: 10px 12px;
      border: 1px solid #ddd;
      border-radius: 5px;
      font-size: 14px;
      transition: border-color 0.3s;
    }
    
    .filter-group input:focus,
    .filter-group select:focus {
      border-color: #4CAF50;
      outline: none;
    }
    
    .time-range {
      display: flex;
      align-items: center;
      gap: 10px;
    }
    
    .time-range select {
      flex: 1;
    }
    
    .price-range {
      display: flex;
      align-items: center;
      gap: 10px;
    }
    
    .price-range input {
      flex: 1;
      width: 50%;
    }
    
    .checkbox-list {
      display: flex;
      flex-direction: column;
      gap: 10px;
    }
    
    .checkbox-item {
      display: flex;
      align-items: center;
      gap: 8px;
    }
    
    .checkbox-item input[type="checkbox"] {
      margin: 0;
    }
    
    .checkbox-item label {
      margin: 0;
      cursor: pointer;
    }
    
    .apply-filters-btn {
      background-color: #4CAF50;
      color: white;
      width: 100%;
      padding: 12px;
      border: none;
      border-radius: 5px;
      font-weight: 500;
      cursor: pointer;
      transition: background-color 0.3s;
    }
    
    .apply-filters-btn:hover {
      background-color: #388E3C;
    }
    
    .map-results {
      flex: 3;
      position: relative;
    }
    
    #map {
      width: 100%;
      height: 500px;
      border-radius: 10px;
      box-shadow: 0 2px 15px rgba(0, 0, 0, 0.08);
      z-index: 10;
      margin-bottom: 30px;
    }
    
    .space-list {
      margin-top: 30px;
    }
    
    .space-item {
      background-color: #fff;
      border-radius: 10px;
      box-shadow: 0 2px 10px rgba(0, 0, 0, 0.08);
      margin-bottom: 20px;
      overflow: hidden;
      display: flex;
      cursor: pointer;
      transition: transform 0.3s, box-shadow 0.3s;
      position: relative; /* Position relative pour les badges */
    }
    
    .space-item:hover {
      transform: translateY(-5px);
      box-shadow: 0 5px 15px rgba(0, 0, 0, 0.15);
    }
    
    .space-item.selected {
      background-color: #f5f9f5;
      border-left: 4px solid #4CAF50;
      transform: translateY(-5px);
      box-shadow: 0 8px 20px rgba(0, 0, 0, 0.15);
    }
    
    .space-item-img {
      width: 180px;
      height: 140px;
      flex-shrink: 0;
      background-size: cover;
      background-position: center;
      position: relative; /* Position relative pour les badges à l'intérieur */
    }
    
    .space-item-content {
      padding: 15px;
      flex: 1;
      display: flex;
      flex-direction: column;
    }
    
    .space-item-header {
      display: flex;
      justify-content: space-between;
      margin-bottom: 10px;
      align-items: flex-start;
    }
    
    .space-item-title {
      font-size: 18px;
      font-weight: 600;
      color: #333;
      margin: 0;
    }
    
    .space-item-rating {
      display: flex;
      align-items: center;
      gap: 5px;
      background-color: #f8f8f8;
      padding: 4px 8px;
      border-radius: 4px;
    }
    
    .space-item-rating i {
      color: #FFC107;
      font-size: 14px;
    }
    
    .space-item-details {
      flex: 1;
      margin-bottom: 15px;
    }
    
    .space-item-location, 
    .space-item-capacity {
      font-size: 14px;
      color: #666;
      margin-bottom: 5px;
      display: flex;
      align-items: center;
      gap: 6px;
    }
    
    .space-item-location i, 
    .space-item-capacity i {
      color: #666;
      font-size: 14px;
      width: 16px;
      text-align: center;
    }
    
    .space-item-footer {
      display: flex;
      justify-content: space-between;
      align-items: center;
    }
    
    .space-item-price {
      font-size: 16px;
      color: #666;
    }
    
    .space-item-price span {
      font-weight: 600;
      color: #333;
      font-size: 18px;
    }
    
    .btn-small {
      display: inline-block;
      background-color: #4CAF50;
      color: white;
      padding: 6px 12px;
      border-radius: 4px;
      text-decoration: none;
      font-size: 14px;
      transition: background-color 0.3s;
    }
    
    .btn-small:hover {
      background-color: #388E3C;
    }
    
    .space-badge {
      position: absolute;
      top: 10px;
      right: 10px;
      padding: 5px 10px;
      border-radius: 15px;
      font-size: 12px;
      font-weight: 500;
      color: white;
      background-color: #4CAF50;
      z-index: 5;
    }
    
    /* Styles pour les popups de la carte */
    .popup-content {
      padding: 10px;
      max-width: 250px;
    }
    
    .popup-image {
      width: 100%;
      height: 120px;
      object-fit: cover;
      border-radius: 5px;
      margin-bottom: 10px;
    }
    
    .popup-title {
      font-weight: 600;
      margin-bottom: 5px;
      color: #333;
      font-size: 16px;
    }
    
    .popup-details {
      font-size: 13px;
      color: #666;
      margin-bottom: 10px;
    }
    
    .popup-price {
      font-weight: 600;
      color: #4CAF50;
      margin-bottom: 10px;
    }
    
    .popup-link {
      display: inline-block;
      padding: 5px 10px;
      background-color: #4CAF50;
      color: white;
      border-radius: 4px;
      text-decoration: none;
      font-size: 13px;
      transition: background-color 0.3s;
    }
    
    .popup-link:hover {
      background-color: #388E3C;
    }
    
    /* Styles pour les popups Leaflet */
    .leaflet-popup-content-wrapper {
      border-radius: 8px;
      box-shadow: 0 3px 14px rgba(0,0,0,0.2);
    }
    
    .leaflet-popup-content {
      margin: 10px;
      padding: 0;
    }
    
    .leaflet-popup-tip-container {
      margin-top: -1px;
    }
    
    .leaflet-popup-tip {
      box-shadow: 0 3px 14px rgba(0,0,0,0.2);
    }
    
    .no-results {
      background-color: #f8f8f8;
      padding: 30px;
      text-align: center;
      border-radius: 10px;
      margin-top: 20px;
    }
    
    .no-results p {
      color: #666;
      font-size: 16px;
      margin-bottom: 20px;
    }
    
    /* Responsive */
    @media (max-width: 968px) {
      .search-map-container {
        flex-direction: column;
      }
      
      .search-filters {
        max-width: 100%;
      }
      
      .space-item {
        flex-direction: column;
      }
      
      .space-item-img {
        width: 100%;
        height: 180px;
      }
    }
  </style>
<% end %>

<!-- Section de titre et description -->
<section class="sub-hero bg-light">
  <div class="container">
    <div class="sub-hero-content">
      <h1>Recherche d'espaces pour votre association</h1>
      <p>Trouvez l'espace idéal pour vos activités parmi notre sélection de lieux disponibles</p>
    </div>
  </div>
</section>

<!-- Container principal avec les filtres et la carte -->
<div class="container">
  <div class="search-map-container">
    <!-- Section des filtres de recherche -->
    <div class="search-filters">
      <h2>Affinez votre recherche</h2>
      <form action="/spaces" method="get">
        <input type="hidden" name="map" value="true">
        
        <div class="filter-section">
          <h3>Localisation</h3>
          <div class="filter-group">
            <label>Ville ou quartier</label>
            <input type="text" name="location" value="<%= params[:location] %>" placeholder="Paris, Lyon, Marseille...">
          </div>
        </div>
        
        <div class="filter-section">
          <h3>Date et horaires</h3>
          <div class="filter-group">
            <label>Date</label>
            <input type="date" name="date" value="<%= params[:date] %>">
          </div>
          <div class="filter-group">
            <label>Horaires</label>
            <div class="time-range">
              <select name="start_time">
                <option value="">Début</option>
                <% (8..22).each do |h| %>
                  <option value="<%= h %>:00" <%= params[:start_time] == "#{h}:00" ? 'selected' : '' %>><%= h %>:00</option>
                <% end %>
              </select>
              <span>à</span>
              <select name="end_time">
                <option value="">Fin</option>
                <% (9..23).each do |h| %>
                  <option value="<%= h %>:00" <%= params[:end_time] == "#{h}:00" ? 'selected' : '' %>><%= h %>:00</option>
                <% end %>
              </select>
            </div>
          </div>
        </div>
        
        <div class="filter-section">
          <h3>Capacité et budget</h3>
          <div class="filter-group">
            <label>Capacité</label>
            <select name="capacity">
              <option value="">Toutes capacités</option>
              <option value="1-10" <%= params[:capacity] == "1-10" ? 'selected' : '' %>>1-10 personnes</option>
              <option value="11-30" <%= params[:capacity] == "11-30" ? 'selected' : '' %>>11-30 personnes</option>
              <option value="31-50" <%= params[:capacity] == "31-50" ? 'selected' : '' %>>31-50 personnes</option>
              <option value="50+" <%= params[:capacity] == "50+" ? 'selected' : '' %>>Plus de 50 personnes</option>
            </select>
          </div>
          <div class="filter-group">
            <label>Budget (€/heure)</label>
            <div class="price-range">
              <input type="number" name="min_price" value="<%= params[:min_price] %>" placeholder="Min" min="0">
              <span>-</span>
              <input type="number" name="max_price" value="<%= params[:max_price] %>" placeholder="Max" min="0">
            </div>
          </div>
        </div>
        
        <div class="filter-section">
          <h3>Type d'espace</h3>
          <div class="filter-group">
            <div class="checkbox-list">
              <% if defined?(Space::CATEGORIES) %>
                <% Space::CATEGORIES.each do |category| %>
                  <div class="checkbox-item">
                    <input type="checkbox" name="categories[]" value="<%= category[1] %>" id="categories_<%= category[1] %>" 
                           <%= params[:categories]&.include?(category[1]) ? 'checked' : '' %>>
                    <label for="categories_<%= category[1] %>"><%= category[0] %></label>
                  </div>
                <% end %>
              <% else %>
                <div class="checkbox-item">
                  <input type="checkbox" name="categories[]" value="salle_reunion" id="categories_salle_reunion">
                  <label for="categories_salle_reunion">Salle de réunion</label>
                </div>
                <div class="checkbox-item">
                  <input type="checkbox" name="categories[]" value="coworking" id="categories_coworking">
                  <label for="categories_coworking">Espace de coworking</label>
                </div>
                <div class="checkbox-item">
                  <input type="checkbox" name="categories[]" value="evenementiel" id="categories_evenementiel">
                  <label for="categories_evenementiel">Espace événementiel</label>
                </div>
              <% end %>
            </div>
          </div>
        </div>
        
        <div class="filter-section">
          <h3>Équipements</h3>
          <div class="filter-group">
            <div class="checkbox-list">
              <% if defined?(Space::AMENITIES) %>
                <% Space::AMENITIES.each do |amenity| %>
                  <div class="checkbox-item">
                    <input type="checkbox" name="amenities[]" value="<%= amenity[1] %>" id="amenities_<%= amenity[1] %>"
                           <%= params[:amenities]&.include?(amenity[1]) ? 'checked' : '' %>>
                    <label for="amenities_<%= amenity[1] %>"><%= amenity[0] %></label>
                  </div>
                <% end %>
              <% else %>
                <div class="checkbox-item">
                  <input type="checkbox" name="amenities[]" value="wifi" id="amenities_wifi">
                  <label for="amenities_wifi">WiFi</label>
                </div>
                <div class="checkbox-item">
                  <input type="checkbox" name="amenities[]" value="videoprojecteur" id="amenities_videoprojecteur">
                  <label for="amenities_videoprojecteur">Vidéoprojecteur</label>
                </div>
                <div class="checkbox-item">
                  <input type="checkbox" name="amenities[]" value="cuisine" id="amenities_cuisine">
                  <label for="amenities_cuisine">Cuisine</label>
                </div>
              <% end %>
            </div>
          </div>
        </div>
        
        <button type="submit" class="apply-filters-btn">Appliquer les filtres</button>
      </form>
    </div>
    
    <!-- Section avec la carte et les résultats -->
    <h2 class="text-xl font-bold mb-4">Carte des espaces disponibles</h2>

    <!-- Conteneur de la carte -->
    <div id="map" style="height: 600px; width: 100%;"></div>
    
    <!-- Initialisation de la carte -->
    <script>
      document.addEventListener("DOMContentLoaded", function () {
        // Initialisation de la carte centrée sur Paris
        var map = L.map('map').setView([48.8566, 2.3522], 12);
    
        // Tuiles OpenStreetMap
        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
          maxZoom: 19,
          attribution: '© OpenStreetMap'
        }).addTo(map);
    
        // Exemple de marqueurs (tu pourras les remplacer dynamiquement ensuite)
        var spaces = <%= raw @spaces.map { |space| 
          {
            lat: space.latitude, 
            lng: space.longitude, 
            name: space.name.gsub("'", "\\\\'")
          } 
        }.to_json %>;
    
        spaces.forEach(function(space) {
          if (space.lat && space.lng) {
            L.marker([space.lat, space.lng])
              .addTo(map)
              .bindPopup('<strong>' + space.name + '</strong>');
          }
        });
      });
    </script>
    
  </div>
</div>

<% content_for :scripts do %>
  <!-- Leaflet JS -->
  <script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"
  integrity="sha512-XQoYMqMTK8LvdxXYG3nZ448hOEQiglfqkJs1NOQV44cWnUrBc8PkAOcXy20w0vlaXaVUearIOBhiXZ5V3ynxwA=="
  crossorigin=""></script>
  
  <script>
    // Déclarer les variables au niveau global pour pouvoir les utiliser dans d'autres fonctions
    var map;
    var markers = {};
    var previouslyHighlighted = null;
    
    // Fonction pour mettre en évidence un marqueur quand on clique sur un élément de la liste
    function highlightMarker(spaceId) {
      if (markers[spaceId]) {
        // Réinitialiser le marqueur précédemment mis en évidence
        if (previouslyHighlighted && markers[previouslyHighlighted]) {
          markers[previouslyHighlighted].setIcon(defaultIcon);
        }
        
        // Centre la carte sur le marqueur sélectionné
        map.setView(markers[spaceId].getLatLng(), 15);
        markers[spaceId].openPopup();
        
        // Mettre en évidence le marqueur actuel
        markers[spaceId].setIcon(highlightIcon);
        previouslyHighlighted = spaceId;
        
        // Mettre en évidence l'élément dans la liste
        var listItems = document.querySelectorAll('.space-item');
        listItems.forEach(function(item) {
          item.classList.remove('selected');
        });
        var selectedItem = document.querySelector('.space-item[data-space-id="' + spaceId + '"]');
        if (selectedItem) {
          selectedItem.classList.add('selected');
          // Faire défiler jusqu'à l'élément de la liste
          selectedItem.scrollIntoView({ behavior: 'smooth', block: 'center' });
        }
      }
    }
    
    document.addEventListener('DOMContentLoaded', function() {
      // Créer les icônes pour les marqueurs standard et mis en évidence
      var defaultIcon = L.icon({
        iconUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-icon.png',
        iconSize: [25, 41],
        iconAnchor: [12, 41],
        popupAnchor: [1, -34],
        shadowUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-shadow.png',
        shadowSize: [41, 41]
      });
      
      var highlightIcon = L.icon({
        iconUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-icon-2x.png',
        iconSize: [30, 45],
        iconAnchor: [15, 45],
        popupAnchor: [1, -34],
        shadowUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-shadow.png',
        shadowSize: [41, 41]
      });
      
      // Initialiser la carte avec le centre par défaut (Paris)
      map = L.map('map').setView([48.8566, 2.3522], 13);
      
      // Ajouter la couche de tuiles OpenStreetMap
      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
      }).addTo(map);
      
      // Tableau pour stocker les coordonnées des marqueurs
      var bounds = [];
      
      <% if @spaces.present? %>
        <% @spaces.each do |space| %>
          <% if space.respond_to?(:latitude) && space.respond_to?(:longitude) && space.latitude.present? && space.longitude.present? %>
            // Ajouter les coordonnées aux limites
            bounds.push([<%= space.latitude %>, <%= space.longitude %>]);
            
            // Créer le contenu du popup
            var popupContent = '<div class="popup-content">' +
              '<img src="<%= space.respond_to?(:photos) && space.photos.respond_to?(:attached?) && space.photos.attached? ? url_for(space.photos.first) : "https://images.unsplash.com/photo-1497366754035-f200968a6e72" %>" class="popup-image">' +
              '<h3 class="popup-title"><%= space.name %></h3>' +
              '<p class="popup-details"><%= space.respond_to?(:address_short) ? space.address_short : (space.respond_to?(:city) ? space.city : space.address.split(",").first) %> • Jusqu\'à <%= space.respond_to?(:capacity) ? space.capacity : "?" %> personnes</p>' +
              '<p class="popup-price"><%= space.respond_to?(:hourly_price) ? space.hourly_price : (space.respond_to?(:price_per_hour) ? space.price_per_hour : "?") %>€ / heure</p>' +
              '<a href="/spaces/<%= space.id %>" class="popup-link">Voir détails</a>' +
              '</div>';
            
            // Créer un marqueur et l'ajouter à la carte
            var marker = L.marker([<%= space.latitude %>, <%= space.longitude %>], {icon: defaultIcon}).addTo(map)
              .bindPopup(popupContent);
            
            // Ajouter un événement de clic au marqueur pour mettre en évidence l'élément correspondant dans la liste
            marker.on('click', function() {
              highlightMarker('<%= space.id %>');
            });
            
            // Stocker le marqueur dans le tableau des marqueurs
            markers['<%= space.id %>'] = marker;
          <% end %>
        <% end %>
      <% end %>
      
      // Si aucun espace n'a de coordonnées, centrer la carte sur la France
      if (bounds.length === 0) {
        map.setView([46.603354, 1.888334], 6); // Centre de la France
      } else if (bounds.length === 1) {
        // Si un seul espace, zoomer dessus
        map.setView(bounds[0], 15);
      } else {
        // Adapter la vue pour voir tous les marqueurs
        try {
          map.fitBounds(bounds);
        } catch (e) {
          console.error("Erreur lors de l'ajustement des limites:", e);
          map.setView([46.603354, 1.888334], 6); // Fallback sur le centre de la France
        }
      }
      
      // Gérer le redimensionnement de la carte
      setTimeout(function() {
        map.invalidateSize();
      }, 100);
    });
  </script>
<% end %>